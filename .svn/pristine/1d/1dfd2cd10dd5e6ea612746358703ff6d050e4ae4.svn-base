package Numbermat.Problems;

import Numbermat.Algorithms;
import Numbermat.Pair;
import java.util.Set;

/**
 *
 * @author Valdemar Svabensky <395868@mail.muni.cz>
 */
public final class QuadraticCongruenceGeneralProblem extends MathProblem {
    
    private int a;
    private int b;
    private int c;
    private int m;
    
    public QuadraticCongruenceGeneralProblem(String difficulty) {
        easyBounds = new Pair(2, 19);
        mediumBounds = new Pair(11, 39);
        hardBounds = new Pair(11, 99);
        
        final Pair<Integer, Integer> bounds = initBounds(difficulty);
        final int lowerBound = bounds.getFirst();
        final int upperBound = bounds.getSecond();
        
        int aa, bb, cc, mm;
        while (true) {
            aa = Algorithms.randInt(lowerBound, upperBound);
            bb = Algorithms.randInt(lowerBound, upperBound);
            cc = Algorithms.randInt(lowerBound, upperBound);
            mm = Algorithms.randPrime(lowerBound, upperBound);
            if (!difficulty.equals("Lehk√°")) {
                final int p = Algorithms.randPrime(2, 7);
                final int q = Algorithms.randPrime(5, 100/p);
                mm = p * q;
            }
            if (!Algorithms.quadraticCongruenceGeneral(aa, bb, cc, mm).isEmpty())
                break;
        }
        setVariables(aa, bb, cc, mm);
    }
    
    public QuadraticCongruenceGeneralProblem(int aa, int bb, int cc, int mm) {
        setVariables(aa, bb, cc, mm);
    }
    
    private void setVariables(int aa, int bb, int cc, int mm) {
        a = aa;
        b = mm;
        c = mm;
        m = mm;
        final Set<Pair<Integer, Integer>> solution = Algorithms.quadraticCongruenceGeneral(a, b, c, m);
        result = Algorithms.quadraticCongruenceConvertSolution(solution);
        prepareAll();
    }

    @Override
    protected void prepareProblemPlaintext() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void prepareProblemLaTeX() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void prepareSolutionPlaintext() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void prepareSolutionLaTeX() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
