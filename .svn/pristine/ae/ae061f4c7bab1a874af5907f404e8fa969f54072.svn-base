package Numbermat;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author Valdemar Svabensky <395868@mail.muni.cz>
 */
public class Main {

    public static void main(String[] args) {
        System.out.println(Algorithms.randCoprime(0, 1));
        /*List<Integer> aList;
        List<Integer> bList;
        List<Integer> nList;
        
        aList = new ArrayList<>(Arrays.asList(40, 2));
        bList = new ArrayList<>(Arrays.asList(40, 3));
        nList = new ArrayList<>(Arrays.asList(20, 5));
        System.out.println((Algorithms.linearCongruenceSystem(2, aList, bList, nList)));*/
    }
    
    public static BufferedImage concatImages(BufferedImage img1, BufferedImage img2) {
        int widthImg1 = img1.getWidth();
        int heightImg1 = img1.getHeight();
        int widthImg2 = img2.getWidth();
        int heightImg2 = img2.getHeight();
        int widthResult = (widthImg1 > widthImg2) ? widthImg1 : widthImg2;
        int heightResult = heightImg1 + heightImg2;

        BufferedImage img = new BufferedImage(widthResult, heightResult, BufferedImage.TYPE_INT_RGB);
        Graphics2D drawer = img.createGraphics();
        drawer.setBackground(Color.WHITE);
        drawer.clearRect(0,0,widthResult,heightResult);

        img.createGraphics().drawImage(img1, 0, 0, null); // 0, 0 are the x and y positions
        img.createGraphics().drawImage(img2, 0, heightImg1, null);
        return img;

        //File final_image = new File("C:\\Users\\Valdo\\Downloads\\jlr\\final.png");
        //ImageIO.write(img, "jpeg", final_image);
    }
    
    /* Concatenate final part of the image 
        StringBuilder finalPart = new StringBuilder();
        finalPart.append(GCDProblem.getProblemLaTeX());
        finalPart.insert(finalPart.lastIndexOf("\\]"), GCDProblem.getGcd());
        BufferedImage solution2 = Utils.createLaTeXImage(finalPart.toString());
        BufferedImage result = Main.concatImages(solution, solution2); */
}

