package Numbermat.Problems;

import Numbermat.Algorithms;
import Numbermat.AlgorithmsSteps;
import Numbermat.Pair;
import Numbermat.Utils;
import java.util.ArrayList;

/**
 *
 * @author Valdemar Svabensky <395868@mail.muni.cz>
 */
public final class ModularPowerProblem extends MathProblem {
    
    private int base;
    private int exp;
    private int mod;
    
    public ModularPowerProblem(String difficulty) {
        easyBounds = new Pair(5, 11);
        mediumBounds = new Pair(11, 37);
        hardBounds = new Pair(37, 97);
        
        Pair<Integer, Integer> bounds = initBounds(difficulty);
        int lowerBound = bounds.getFirst();
        int upperBound = bounds.getSecond();
        
        int b = Algorithms.randInt(lowerBound, upperBound);
        int e = Algorithms.randInt(lowerBound, upperBound);
        int m = Algorithms.randInt(lowerBound, upperBound);
        if (Algorithms.randInt(1, 10) == 1)
            m = 100;
        setVariables(b, e, m);
    }
    
    public ModularPowerProblem(int b, int e, int m) {
        setVariables(b, e, m);
    }
    
    private void setVariables(int b, int e, int m) {
        base = b;
        exp = e;
        mod = m;
        result = new ArrayList<>(1);
        result.add(Algorithms.modPow(b, e, m));
        prepareAll();
    }

    @Override
    protected void prepareProblemPlaintext() {
        StringBuilder sb = new StringBuilder();
        sb.append(base).append("^").append(exp).append(" ≡ x (mod ");
        sb.append(mod).append(")").append(Utils.NEWLINE);
        problemPlaintext = sb.toString();
    }

    @Override
    protected void prepareProblemLaTeX() {
        StringBuilder sb = new StringBuilder();
        sb.append(base).append("^{").append(exp).append("} ≡ x \\pmod{");
        sb.append(mod).append("}\\\\").append(Utils.NEWLINE);
        problemLaTeX = sb.toString();
    }

    @Override
    protected void prepareSolutionPlaintext() {
        solutionPlaintext = AlgorithmsSteps.modPowSteps(base, exp, mod);
    }

    @Override
    protected void prepareSolutionLaTeX() {
        solutionLaTeX = Utils.prepareBasicMath(solutionPlaintext);
        solutionLaTeX = Utils.prepareCongruencesMath(solutionLaTeX);
        solutionLaTeX = Utils.prepareAlignedMath(solutionLaTeX);
    }
}
