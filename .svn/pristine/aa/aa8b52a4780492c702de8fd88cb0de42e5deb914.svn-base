package Numbermat.Problems;

import Numbermat.Algorithms;
import Numbermat.Pair;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author Valdemar Svabensky <395868@mail.muni.cz>
 */
public final class LinearCongruenceProblem extends MathProblem {
    
    private LinearCongruenceSystemProblem lcsProblem;
    
    public LinearCongruenceProblem(String difficulty) {
        easyBounds = new Pair(11, 50);
        mediumBounds = new Pair(50, 500);
        hardBounds = new Pair(500, 1000);
        
        final Pair<Integer, Integer> bounds = initBounds(difficulty);
        final int lowerBound = bounds.getFirst();
        final int upperBound = bounds.getSecond();
        
        int a1, b1, n1;
        while (true) {
            a1 = Algorithms.randInt(lowerBound, upperBound);
            b1 = Algorithms.randInt(lowerBound, upperBound);
            n1 = Algorithms.randInt(lowerBound, upperBound, false);
            final Pair<Integer, Integer> solution = Algorithms.linearCongruence(a1, b1, n1);
            if ((!solution.isEmpty()) && (!solution.equals(new Pair<>(0, 1))))
                break;
        }
        setVariables(a1, b1, n1);
    }
    
    public LinearCongruenceProblem(int a1, int b1, int n1) {
        setVariables(a1, b1, n1);
    }
    
    private void setVariables(int a1, int b1, int n1) {
        final List<Integer> aList = new ArrayList<>(Arrays.asList(a1));
        final List<Integer> bList = new ArrayList<>(Arrays.asList(b1));
        final List<Integer> nList = new ArrayList<>(Arrays.asList(n1));
        lcsProblem = new LinearCongruenceSystemProblem(1, aList, bList, nList);
        result = lcsProblem.getResult();
        prepareAll();
    }

    @Override
    protected void prepareProblemPlaintext() {
        problemPlaintext = lcsProblem.getProblemPlaintext();
    }

    @Override
    protected void prepareProblemLaTeX() {
        problemLaTeX = lcsProblem.getProblemLaTeX();
    }

    @Override
    protected void prepareSolutionPlaintext() {
        solutionPlaintext = lcsProblem.getSolutionPlaintext();
    }

    @Override
    protected void prepareSolutionLaTeX() {
        solutionLaTeX = lcsProblem.getSolutionLaTeX();
    }
}
